// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
id Int @id @default(autoincrement())
inviteable Boolean
fullName String @db.VarChar(64)
usrName String @db.VarChar(16)
usnaLastModDate DateTime
usnaModNumRemain Int
paswrd String @db.VarChar(32)
dateOfBirth DateTime @db.Date
school String @db.VarChar(100)
clss String @db.VarChar(10)
emailAddress String @db.VarChar(64)
emailLastModDate DateTime
phoneNum String @db.VarChar(15)
omIdentifier String @db.VarChar(11)
status String @db.VarChar(12)
discordName String @db.VarChar(32)
teamMemberships TeamMembership[] @relation("UserTeamMembership")
applications Application[] @relation("UserApplication")
pictureLinks PictureLink[] @relation("UserPictureLink")
}

model Team {
id Int @id @default(autoincrement())
shortName String @db.VarChar(4)
fullName String @db.VarChar(16)
creatorId Int
teamMemberships TeamMembership[] @relation("TeamMembership")
applications Application[] @relation("TeamApplication")
pictureLinks PictureLink[] @relation("TeamPictureLink")
}

model Event {
id Int @id @default(autoincrement())
name String @db.VarChar(32)
startDate DateTime
endDate DateTime
place String @db.VarChar(255)
details String? @db.VarChar(512)
tournaments Tournament[] @relation("EventTournament")
pictureLinks PictureLink[] @relation("EventPictureLink")
}

model Game {
id Int @id @default(autoincrement())
name String @db.VarChar(32)
tournaments Tournament[] @relation("GameTournament")
}

model Tournament {
id Int @id @default(autoincrement())
name String @db.VarChar(32)
numParticipant Int
teamNum Int?
startDate DateTime
endDate DateTime
gameMode String @db.VarChar(32)
maxParticipant Int
apnStart DateTime
apnEnd DateTime
details String? @db.VarChar(512)
evtId Int
gaeId Int
event Event @relation("EventTournament", fields: [evtId], references: [id], onDelete: Cascade)
game Game @relation("GameTournament", fields: [gaeId], references: [id], onDelete: Cascade)
matches Match[] @relation("TournamentMatch")
applications Application[] @relation("TournamentApplication")
}

model Picture {
id Int @id @default(autoincrement())
imgPath String @db.VarChar(16384)
pictureLinks PictureLink[] @relation("PictureLink")
}

model TeamMembership {
status String @db.VarChar(12)
userId Int
teamId Int
user User @relation("UserTeamMembership", fields: [userId], references: [id], onDelete: Restrict)
team Team @relation("TeamMembership", fields: [teamId], references: [id], onDelete: Restrict)
@@id([userId, teamId])
}

model Match {
id Int @id @default(autoincrement())
status String @db.VarChar(12)
place String? @db.VarChar(255)
dte DateTime?
details String? @db.VarChar(512)
winner String? @db.VarChar(16)
rslt String? @db.VarChar(10)
apn1Id Int
apn2Id Int
tntId Int
application1 Application @relation("ApplicationMatch1", fields: [apn1Id], references: [id], onDelete: Restrict)
application2 Application @relation("ApplicationMatch2", fields: [apn2Id], references: [id], onDelete: Restrict)
tournament Tournament @relation("TournamentMatch", fields: [tntId], references: [id])
@@id([id, apn1Id, apn2Id, tntId])
}

model Application {
id Int @id @default(autoincrement())
dte DateTime
status String @db.VarChar(12)
user1Id Int?
user2Id Int?
user3Id Int?
user4Id Int?
user5Id Int?
teamId Int?
tntId Int
user1 User? @relation("UserApplication", fields: [user1Id], references: [id], onDelete: Restrict)
user2 User? @relation("UserApplication", fields: [user2Id], references: [id], onDelete: Restrict)
user3 User? @relation("UserApplication", fields: [user3Id], references: [id], onDelete: Restrict)
user4 User? @relation("UserApplication", fields: [user4Id], references: [id], onDelete: Restrict)
user5 User? @relation("UserApplication", fields: [user5Id], references: [id], onDelete: Restrict)
team Team? @relation("TeamApplication", fields: [teamId], references: [id], onDelete: Restrict)
tournament Tournament @relation("TournamentApplication", fields: [tntId], references: [id], onDelete: Cascade)
@@id([id, tntId])
}

model PictureLink {
id Int @id @default(autoincrement())
userId Int?
teamId Int?
tntId Int?
evtId Int?
pteId Int
user User? @relation("UserPictureLink", fields: [userId], references: [id], onDelete: Restrict)
team Team? @relation("TeamPictureLink", fields: [teamId], references: [id], onDelete: Restrict)
tournament Tournament? @relation("TournamentPictureLink", fields: [tntId], references: [id], onDelete: Cascade)
event Event? @relation("EventPictureLink", fields: [evtId], references: [id], onDelete: Cascade)
picture Picture @relation("PictureLink", fields: [pteId], references: [id])
@@id([id, pteId])
}